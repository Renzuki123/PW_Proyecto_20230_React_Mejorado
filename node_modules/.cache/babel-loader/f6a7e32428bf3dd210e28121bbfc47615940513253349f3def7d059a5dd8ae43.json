{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\OneDrive\\\\Escritorio\\\\ULima\\\\Ciclo 2023-0\\\\Programacion Web\\\\PW_Proyecto_20230_React_Mejorado\\\\src\\\\Restaurantes\\\\restaurant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Carrito from './components/carrito.jsx';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './restaurant.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Restaurant = () => {\n  _s();\n  const [menu, setMenu] = useState([]);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/endpoints/platosgenericos').then(response => response.json()).then(data => {\n      setMenu(data.platos_genericos);\n    }).catch(error => {\n      console.error('Error fetching menu:', error);\n    });\n  }, []);\n  const handleAddToCart = item => {\n    const foundItem = cart.find(i => i.name === item.name);\n    if (foundItem) {\n      foundItem.quantity += 1;\n      setCart([...cart]);\n    } else {\n      setCart([...cart, {\n        ...item,\n        quantity: 1\n      }]);\n    }\n  };\n  const handleRemoveFromCart = item => {\n    const foundItem = cart.find(i => i.name === item.name);\n    if (foundItem) {\n      if (foundItem.quantity === 1) {\n        const newCart = cart.filter(i => i.name !== item.name);\n        setCart(newCart);\n      } else {\n        foundItem.quantity -= 1;\n        setCart([...cart]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Menu del Restaurante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: menu.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-plato\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plato-imagen\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imagen,\n            alt: item.imagen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [item.name, \" - $\", item.precio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToCart(item),\n          children: \"Agregar al Carrito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carrito, {\n      cart: cart,\n      setCart: setCart,\n      handleRemoveFromCart: handleRemoveFromCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Restaurant, \"bQqgk5QjbCjJyB+r/GRBHDBo/Cg=\");\n_c = Restaurant;\nexport default Restaurant;\n\n/*\r\nconst Restaurant = () => {\r\n  const [menu, setMenu] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/endpoints/platosgenericos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMenu(data.platos_genericos);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching menu:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddToCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      foundItem.quantity += 1;\r\n      setCart([...cart]);\r\n    } else {\r\n      setCart([...cart, { ...item, quantity: 1 }]);\r\n    }\r\n    // Usar newCart en lugar de cart en la solicitud POST\r\n    const newCart = foundItem ? [...cart] : [...cart, { ...item, quantity: 1 }];\r\n    fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newCart)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching total:', error);\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      if (foundItem.quantity === 1) {\r\n        const newCart = cart.filter(i => i.name !== item.name);\r\n        setCart(newCart);\r\n      } else {\r\n        foundItem.quantity -= 1;\r\n        setCart([...cart]);\r\n      }\r\n      // Usar newCart en lugar de cart en la solicitud POST\r\n      const newCart = foundItem ? [...cart] : cart.filter(i => i.name !== item.name);\r\n      fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newCart)\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setTotal(data.total);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching total:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCheckout = () => {\r\n    fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ items: cart })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n      setCart([]);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error procesando los platos:', error);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <center><h1>Menu del Restaurante</h1></center>\r\n      <div>\r\n        {menu.map((item, index) => (\r\n          <div className=\"info-plato\" key={item.name}>\r\n            <div className='plato-imagen'>\r\n              <img src={item.imagen} alt=\"Imagen del plato\" />\r\n            </div>\r\n            <div className='plato-info'>\r\n              <h2>{item.name}</h2>\r\n              <p>{item.descripcion}</p>\r\n              <p>Precio: {item.precio}</p>\r\n              <button onClick={() => handleAddToCart(item)}>Agregar al carrito</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Carrito cart={cart} setCart={setCart} total={total} handleCheckout={handleCheckout} handleRemoveFromCart={handleRemoveFromCart} />\r\n      <button\r\n        className=\"btn btn-primary btn-block\"\r\n        onClick={() => {\r\n          fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              items: cart.map(item => ({ name: item.name, quantity: item.quantity, precio: item.precio })),\r\n              total: total\r\n            })\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.success) {\r\n              setCart([]);\r\n              setTotal(0);\r\n              navigate('/registrar_pedido');\r\n            } else {\r\n              console.error('Error al procesar pedido:', data.error);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error al procesar pedido:', error);\r\n          });\r\n        }}\r\n      >\r\n        Realizar Pedido\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Restaurant;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"names":["React","useState","useEffect","Carrito","useNavigate","axios","Link","Restaurant","menu","setMenu","cart","setCart","fetch","then","response","json","data","platos_genericos","catch","error","console","handleAddToCart","item","foundItem","find","i","name","quantity","handleRemoveFromCart","newCart","filter","map","index","imagen","precio"],"sources":["C:/Users/renzo/OneDrive/Escritorio/ULima/Ciclo 2023-0/Programacion Web/PW_Proyecto_20230_React_Mejorado/src/Restaurantes/restaurant.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Carrito from './components/carrito.jsx';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './restaurant.css';\r\n\r\nconst Restaurant = () => {\r\n  const [menu, setMenu] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/endpoints/platosgenericos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMenu(data.platos_genericos);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching menu:', error);\r\n      });\r\n  }, []);\r\n  const handleAddToCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      foundItem.quantity += 1;\r\n      setCart([...cart]);\r\n    } else {\r\n      setCart([...cart, { ...item, quantity: 1 }]);\r\n    }\r\n  };\r\n  const handleRemoveFromCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      if (foundItem.quantity === 1) {\r\n        const newCart = cart.filter(i => i.name !== item.name);\r\n        setCart(newCart);\r\n      } else {\r\n        foundItem.quantity -= 1;\r\n        setCart([...cart]);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <center><h1>Menu del Restaurante</h1></center>\r\n      <div>\r\n        {menu.map((item, index) => (\r\n          <div className=\"info-plato\" key={item.name}>\r\n            <div className='plato-imagen'>\r\n              <img src={item.imagen} alt={item.imagen} />\r\n            </div>\r\n            <h2>{item.name} - ${item.precio}</h2>\r\n            <button onClick={() => handleAddToCart(item)}>Agregar al Carrito</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Carrito cart={cart} setCart={setCart} handleRemoveFromCart={handleRemoveFromCart} />\r\n    </div>\r\n  );\r\n};\r\nexport default Restaurant;\r\n\r\n/*\r\nconst Restaurant = () => {\r\n  const [menu, setMenu] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/endpoints/platosgenericos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMenu(data.platos_genericos);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching menu:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddToCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      foundItem.quantity += 1;\r\n      setCart([...cart]);\r\n    } else {\r\n      setCart([...cart, { ...item, quantity: 1 }]);\r\n    }\r\n    // Usar newCart en lugar de cart en la solicitud POST\r\n    const newCart = foundItem ? [...cart] : [...cart, { ...item, quantity: 1 }];\r\n    fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newCart)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching total:', error);\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      if (foundItem.quantity === 1) {\r\n        const newCart = cart.filter(i => i.name !== item.name);\r\n        setCart(newCart);\r\n      } else {\r\n        foundItem.quantity -= 1;\r\n        setCart([...cart]);\r\n      }\r\n      // Usar newCart en lugar de cart en la solicitud POST\r\n      const newCart = foundItem ? [...cart] : cart.filter(i => i.name !== item.name);\r\n      fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newCart)\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setTotal(data.total);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching total:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCheckout = () => {\r\n    fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ items: cart })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n      setCart([]);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error procesando los platos:', error);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <center><h1>Menu del Restaurante</h1></center>\r\n      <div>\r\n        {menu.map((item, index) => (\r\n          <div className=\"info-plato\" key={item.name}>\r\n            <div className='plato-imagen'>\r\n              <img src={item.imagen} alt=\"Imagen del plato\" />\r\n            </div>\r\n            <div className='plato-info'>\r\n              <h2>{item.name}</h2>\r\n              <p>{item.descripcion}</p>\r\n              <p>Precio: {item.precio}</p>\r\n              <button onClick={() => handleAddToCart(item)}>Agregar al carrito</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Carrito cart={cart} setCart={setCart} total={total} handleCheckout={handleCheckout} handleRemoveFromCart={handleRemoveFromCart} />\r\n      <button\r\n        className=\"btn btn-primary btn-block\"\r\n        onClick={() => {\r\n          fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              items: cart.map(item => ({ name: item.name, quantity: item.quantity, precio: item.precio })),\r\n              total: total\r\n            })\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.success) {\r\n              setCart([]);\r\n              setTotal(0);\r\n              navigate('/registrar_pedido');\r\n            } else {\r\n              console.error('Error al procesar pedido:', data.error);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error al procesar pedido:', error);\r\n          });\r\n        }}\r\n      >\r\n        Realizar Pedido\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Restaurant;\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}