{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\OneDrive\\\\Escritorio\\\\ULima\\\\Ciclo 2023-0\\\\Programacion Web\\\\PW_Proyecto_20230_React_Mejorado\\\\src\\\\Restaurantes\\\\restaurant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Carrito from './components/carrito.jsx';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './restaurant.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Restaurant = () => {\n  _s();\n  const [platos, setPlatos] = useState([]);\n  const [carrito, setCarrito] = useState([]);\n  const [total, setTotal] = useState(0);\n  const actualizarPlatos = nuevosPlatos => {\n    setPlatos(nuevosPlatos);\n  };\n  const agregarAlCarrito = plato => {\n    const nuevoCarrito = [...carrito];\n    const indexPlato = nuevoCarrito.findIndex(p => p.id === plato.id);\n    if (indexPlato >= 0) {\n      nuevoCarrito[indexPlato].cantidad += 1;\n    } else {\n      nuevoCarrito.push({\n        ...plato,\n        cantidad: 1\n      });\n    }\n    setCarrito(nuevoCarrito);\n    setTotal(total + plato.precio);\n  };\n  const quitarDelCarrito = plato => {\n    const nuevoCarrito = [...carrito];\n    const indexPlato = nuevoCarrito.findIndex(p => p.id === plato.id);\n    if (indexPlato >= 0) {\n      if (nuevoCarrito[indexPlato].cantidad === 1) {\n        nuevoCarrito.splice(indexPlato, 1);\n      } else {\n        nuevoCarrito[indexPlato].cantidad -= 1;\n      }\n      setCarrito(nuevoCarrito);\n      setTotal(total - plato.precio);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Men\\xFA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListaPlatos, {\n        platos: platos,\n        agregarAlCarrito: agregarAlCarrito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-order\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Carrito de Compras\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Carrito, {\n        carrito: carrito,\n        total: total,\n        quitarDelCarrito: quitarDelCarrito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Restaurant, \"tOPQqcQREJVRa8RA7eBuoPQQqyk=\");\n_c = Restaurant;\nexport default Restaurant;\n\n/*\r\nconst Restaurant = () => {\r\n  const [menu, setMenu] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/endpoints/platosgenericos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMenu(data.platos_genericos);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching menu:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddToCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      foundItem.quantity += 1;\r\n      setCart([...cart]);\r\n    } else {\r\n      setCart([...cart, { ...item, quantity: 1 }]);\r\n    }\r\n    // Usar newCart en lugar de cart en la solicitud POST\r\n    const newCart = foundItem ? [...cart] : [...cart, { ...item, quantity: 1 }];\r\n    fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newCart)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching total:', error);\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      if (foundItem.quantity === 1) {\r\n        const newCart = cart.filter(i => i.name !== item.name);\r\n        setCart(newCart);\r\n      } else {\r\n        foundItem.quantity -= 1;\r\n        setCart([...cart]);\r\n      }\r\n      // Usar newCart en lugar de cart en la solicitud POST\r\n      const newCart = foundItem ? [...cart] : cart.filter(i => i.name !== item.name);\r\n      fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newCart)\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setTotal(data.total);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching total:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCheckout = () => {\r\n    fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ items: cart })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n      setCart([]);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error procesando los platos:', error);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <center><h1>Menu del Restaurante</h1></center>\r\n      <div>\r\n        {menu.map((item, index) => (\r\n          <div className=\"info-plato\" key={item.name}>\r\n            <div className='plato-imagen'>\r\n              <img src={item.imagen} alt=\"Imagen del plato\" />\r\n            </div>\r\n            <div className='plato-info'>\r\n              <h2>{item.name}</h2>\r\n              <p>{item.descripcion}</p>\r\n              <p>Precio: {item.precio}</p>\r\n              <button onClick={() => handleAddToCart(item)}>Agregar al carrito</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Carrito cart={cart} setCart={setCart} total={total} handleCheckout={handleCheckout} handleRemoveFromCart={handleRemoveFromCart} />\r\n      <button\r\n        className=\"btn btn-primary btn-block\"\r\n        onClick={() => {\r\n          fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              items: cart.map(item => ({ name: item.name, quantity: item.quantity, precio: item.precio })),\r\n              total: total\r\n            })\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.success) {\r\n              setCart([]);\r\n              setTotal(0);\r\n              navigate('/registrar_pedido');\r\n            } else {\r\n              console.error('Error al procesar pedido:', data.error);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error al procesar pedido:', error);\r\n          });\r\n        }}\r\n      >\r\n        Realizar Pedido\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Restaurant;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"names":["React","useState","useEffect","Carrito","useNavigate","Link","Restaurant","platos","setPlatos","carrito","setCarrito","total","setTotal","actualizarPlatos","nuevosPlatos","agregarAlCarrito","plato","nuevoCarrito","indexPlato","findIndex","p","id","cantidad","push","precio","quitarDelCarrito","splice"],"sources":["C:/Users/renzo/OneDrive/Escritorio/ULima/Ciclo 2023-0/Programacion Web/PW_Proyecto_20230_React_Mejorado/src/Restaurantes/restaurant.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Carrito from './components/carrito.jsx';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './restaurant.css';\r\n\r\nconst Restaurant = () => {\r\n  const [platos, setPlatos] = useState([]);\r\n  const [carrito, setCarrito] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const actualizarPlatos = (nuevosPlatos) => {\r\n    setPlatos(nuevosPlatos);\r\n  };\r\n\r\n  const agregarAlCarrito = (plato) => {\r\n    const nuevoCarrito = [...carrito];\r\n    const indexPlato = nuevoCarrito.findIndex((p) => p.id === plato.id);\r\n    if (indexPlato >= 0) {\r\n      nuevoCarrito[indexPlato].cantidad += 1;\r\n    } else {\r\n      nuevoCarrito.push({ ...plato, cantidad: 1 });\r\n    }\r\n    setCarrito(nuevoCarrito);\r\n    setTotal(total + plato.precio);\r\n  };\r\n\r\n  const quitarDelCarrito = (plato) => {\r\n    const nuevoCarrito = [...carrito];\r\n    const indexPlato = nuevoCarrito.findIndex((p) => p.id === plato.id);\r\n    if (indexPlato >= 0) {\r\n      if (nuevoCarrito[indexPlato].cantidad === 1) {\r\n        nuevoCarrito.splice(indexPlato, 1);\r\n      } else {\r\n        nuevoCarrito[indexPlato].cantidad -= 1;\r\n      }\r\n      setCarrito(nuevoCarrito);\r\n      setTotal(total - plato.precio);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"restaurant-container\">\r\n      <div className=\"restaurant-menu\">\r\n        <h1>Menú</h1>\r\n        <ListaPlatos platos={platos} agregarAlCarrito={agregarAlCarrito} />\r\n      </div>\r\n      <div className=\"restaurant-order\">\r\n        <h1>Carrito de Compras</h1>\r\n        <Carrito\r\n          carrito={carrito}\r\n          total={total}\r\n          quitarDelCarrito={quitarDelCarrito}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restaurant;\r\n\r\n/*\r\nconst Restaurant = () => {\r\n  const [menu, setMenu] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/endpoints/platosgenericos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMenu(data.platos_genericos);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching menu:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddToCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      foundItem.quantity += 1;\r\n      setCart([...cart]);\r\n    } else {\r\n      setCart([...cart, { ...item, quantity: 1 }]);\r\n    }\r\n    // Usar newCart en lugar de cart en la solicitud POST\r\n    const newCart = foundItem ? [...cart] : [...cart, { ...item, quantity: 1 }];\r\n    fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(newCart)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching total:', error);\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromCart = (item) => {\r\n    const foundItem = cart.find(i => i.name === item.name);\r\n    if (foundItem) {\r\n      if (foundItem.quantity === 1) {\r\n        const newCart = cart.filter(i => i.name !== item.name);\r\n        setCart(newCart);\r\n      } else {\r\n        foundItem.quantity -= 1;\r\n        setCart([...cart]);\r\n      }\r\n      // Usar newCart en lugar de cart en la solicitud POST\r\n      const newCart = foundItem ? [...cart] : cart.filter(i => i.name !== item.name);\r\n      fetch('http://localhost:8000/endpoints/platosgenericos', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newCart)\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setTotal(data.total);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching total:', error);\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCheckout = () => {\r\n    fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ items: cart })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setTotal(data.total);\r\n      setCart([]);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error procesando los platos:', error);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <center><h1>Menu del Restaurante</h1></center>\r\n      <div>\r\n        {menu.map((item, index) => (\r\n          <div className=\"info-plato\" key={item.name}>\r\n            <div className='plato-imagen'>\r\n              <img src={item.imagen} alt=\"Imagen del plato\" />\r\n            </div>\r\n            <div className='plato-info'>\r\n              <h2>{item.name}</h2>\r\n              <p>{item.descripcion}</p>\r\n              <p>Precio: {item.precio}</p>\r\n              <button onClick={() => handleAddToCart(item)}>Agregar al carrito</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Carrito cart={cart} setCart={setCart} total={total} handleCheckout={handleCheckout} handleRemoveFromCart={handleRemoveFromCart} />\r\n      <button\r\n        className=\"btn btn-primary btn-block\"\r\n        onClick={() => {\r\n          fetch('http://localhost:8000/endpoints/procesar_pedido', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              items: cart.map(item => ({ name: item.name, quantity: item.quantity, precio: item.precio })),\r\n              total: total\r\n            })\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.success) {\r\n              setCart([]);\r\n              setTotal(0);\r\n              navigate('/registrar_pedido');\r\n            } else {\r\n              console.error('Error al procesar pedido:', data.error);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error al procesar pedido:', error);\r\n          });\r\n        }}\r\n      >\r\n        Realizar Pedido\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Restaurant;\r\n\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,kBAAkB;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMY,gBAAgB,GAAIC,YAAY,IAAK;IACzCN,SAAS,CAACM,YAAY,CAAC;EACzB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,YAAY,GAAG,CAAC,GAAGR,OAAO,CAAC;IACjC,MAAMS,UAAU,GAAGD,YAAY,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,KAAK,CAACK,EAAE,CAAC;IACnE,IAAIH,UAAU,IAAI,CAAC,EAAE;MACnBD,YAAY,CAACC,UAAU,CAAC,CAACI,QAAQ,IAAI,CAAC;IACxC,CAAC,MAAM;MACLL,YAAY,CAACM,IAAI,CAAC;QAAE,GAAGP,KAAK;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC;IAC9C;IACAZ,UAAU,CAACO,YAAY,CAAC;IACxBL,QAAQ,CAACD,KAAK,GAAGK,KAAK,CAACQ,MAAM,CAAC;EAChC,CAAC;EAED,MAAMC,gBAAgB,GAAIT,KAAK,IAAK;IAClC,MAAMC,YAAY,GAAG,CAAC,GAAGR,OAAO,CAAC;IACjC,MAAMS,UAAU,GAAGD,YAAY,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,KAAK,CAACK,EAAE,CAAC;IACnE,IAAIH,UAAU,IAAI,CAAC,EAAE;MACnB,IAAID,YAAY,CAACC,UAAU,CAAC,CAACI,QAAQ,KAAK,CAAC,EAAE;QAC3CL,YAAY,CAACS,MAAM,CAACR,UAAU,EAAE,CAAC,CAAC;MACpC,CAAC,MAAM;QACLD,YAAY,CAACC,UAAU,CAAC,CAACI,QAAQ,IAAI,CAAC;MACxC;MACAZ,UAAU,CAACO,YAAY,CAAC;MACxBL,QAAQ,CAACD,KAAK,GAAGK,KAAK,CAACQ,MAAM,CAAC;IAChC;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,sBAAsB;IAAA,wBACnC;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAA,UAAI;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACb,QAAC,WAAW;QAAC,MAAM,EAAEjB,MAAO;QAAC,gBAAgB,EAAEQ;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/D,eACN;MAAK,SAAS,EAAC,kBAAkB;MAAA,wBAC/B;QAAA,UAAI;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B,QAAC,OAAO;QACN,OAAO,EAAEN,OAAQ;QACjB,KAAK,EAAEE,KAAM;QACb,gBAAgB,EAAEc;MAAiB;QAAA;QAAA;QAAA;MAAA,QACnC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAnDInB,UAAU;AAAA,KAAVA,UAAU;AAqDhB,eAAeA,UAAU;;AAEzlJA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}