{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\Desktop\\\\Proyecto Renzo Cavero\\\\PW_Proyecto_20230_React_Mejorado\\\\src\\\\Login\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport LoginForm from './LoginForm';\nimport LoginStyle from './LoginStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const onLoginOk = function (usuario, password) {\n    fetch('http://127.0.0.1:8000/endpoints/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        usuario: usuario,\n        password: password\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error en la respuesta del servidor');\n      }\n    }).then(data => {\n      if (data.error === '') {\n        const dataUsuario = {\n          username: usuario,\n          password: password\n        };\n\n        // JSON.stringify : convierte objetos js a JSON (string)\n        const dataUsuarioJSON = JSON.stringify(dataUsuario);\n        console.log(dataUsuario);\n        console.log(dataUsuarioJSON);\n        // Guardado en session storage\n        sessionStorage.setItem('DATA_USUARIO', dataUsuarioJSON);\n\n        // Redirigir al usuario a otra página\n        navigate('/Req2');\n      } else {\n        throw new Error(data.error);\n      }\n    }).catch(error => {\n      console.error(error);\n      // Mostrar mensaje de error al usuario\n      alert('INICIO DE SESIÓN FALLIDO');\n    });\n  };\n  const onLoginNotOk = function () {\n    alert('SOLICITUD NO ES DE TIPO POST');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLoginOk: onLoginOk,\n          onLoginNotOk: onLoginNotOk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useNavigate","LoginForm","LoginStyle","LoginPage","navigate","onLoginOk","usuario","password","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","data","error","dataUsuario","username","dataUsuarioJSON","console","log","sessionStorage","setItem","catch","alert","onLoginNotOk"],"sources":["C:/Users/renzo/Desktop/Proyecto Renzo Cavero/PW_Proyecto_20230_React_Mejorado/src/Login/LoginPage.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\r\nimport LoginForm from './LoginForm';\r\nimport LoginStyle from './LoginStyle.css';\r\n\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const onLoginOk = function (usuario, password) {\r\n    fetch('http://127.0.0.1:8000/endpoints/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        usuario: usuario,\r\n        password: password,\r\n      }),\r\n    })\r\n\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error('Error en la respuesta del servidor');\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (data.error === '') {\r\n          const dataUsuario = {\r\n            username: usuario,\r\n            password: password,\r\n          };\r\n\r\n          // JSON.stringify : convierte objetos js a JSON (string)\r\n          const dataUsuarioJSON = JSON.stringify(dataUsuario);\r\n          console.log(dataUsuario);\r\n          console.log(dataUsuarioJSON);\r\n          // Guardado en session storage\r\n          sessionStorage.setItem('DATA_USUARIO', dataUsuarioJSON);\r\n\r\n          // Redirigir al usuario a otra página\r\n          navigate('/Req2');\r\n        } else {\r\n          throw new Error(data.error);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Mostrar mensaje de error al usuario\r\n        alert('INICIO DE SESIÓN FALLIDO');\r\n      });\r\n  };\r\n\r\n  const onLoginNotOk = function () {\r\n    alert('SOLICITUD NO ES DE TIPO POST');\r\n  };\r\n\r\n  return (\r\n    <div class=\"Login\">\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n        <div className=\"col\">\r\n          <LoginForm onLoginOk={onLoginOk} onLoginNotOk={onLoginNotOk} />\r\n        </div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,kBAAkB;AAAC;AAG1C,SAASC,SAAS,GAAG;EAAA;EACnB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAMK,SAAS,GAAG,UAAUC,OAAO,EAAEC,QAAQ,EAAE;IAC7CC,KAAK,CAAC,uCAAuC,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBP,OAAO,EAAEA,OAAO;QAChBC,QAAQ,EAAEA;MACZ,CAAC;IACH,CAAC,CAAC,CAECO,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;MACvD;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,KAAK,KAAK,EAAE,EAAE;QACrB,MAAMC,WAAW,GAAG;UAClBC,QAAQ,EAAEhB,OAAO;UACjBC,QAAQ,EAAEA;QACZ,CAAC;;QAED;QACA,MAAMgB,eAAe,GAAGX,IAAI,CAACC,SAAS,CAACQ,WAAW,CAAC;QACnDG,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;QACxBG,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;QAC5B;QACAG,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEJ,eAAe,CAAC;;QAEvD;QACAnB,QAAQ,CAAC,OAAO,CAAC;MACnB,CAAC,MAAM;QACL,MAAM,IAAIc,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;MAC7B;IACF,CAAC,CAAC,CACDQ,KAAK,CAAER,KAAK,IAAK;MAChBI,OAAO,CAACJ,KAAK,CAACA,KAAK,CAAC;MACpB;MACAS,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAG,YAAY;IAC/BD,KAAK,CAAC,8BAA8B,CAAC;EACvC,CAAC;EAED,oBACE;IAAK,KAAK,EAAC,OAAO;IAAA,uBAChB;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAK,SAAS,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eAC3B;QAAK,SAAS,EAAC,KAAK;QAAA,uBAClB,QAAC,SAAS;UAAC,SAAS,EAAExB,SAAU;UAAC,YAAY,EAAEyB;QAAa;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC3D,eACN;QAAK,SAAS,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EACvB;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAhEQ3B,SAAS;EAAA,QACCH,WAAW;AAAA;AAAA,KADrBG,SAAS;AAkElB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}