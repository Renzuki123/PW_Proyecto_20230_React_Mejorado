{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\Desktop\\\\Proyecto Renzo Cavero\\\\PW_Proyecto_20230_React_Mejorado\\\\src\\\\Req3\\\\Req3.jsx\",\n  _s = $RefreshSig$();\n/*El siguiente req se hizo con el apoyo de este video de YT: https://youtu.be/JY7eV4VMeV0*/\nimport './Req3.css';\nimport data from './data.js';\nimport ArticleList from './ArticleList';\nimport ButtonList from './ButtonList';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Req3 = () => {\n  _s();\n  const [listaRestaurantes, setListaRestaurantes] = useState([]);\n  const obtenerRestauranteAsyncAwait = async function () {\n    try {\n      const response = await fetch(\"http://localhost:8000/endpoints/restaurante/listar\");\n      const data = await response.json();\n      setListaRestaurantes(data);\n    } catch (error) {\n      console.error(\"ERROR OBTENIENDO RESTAURANTES\");\n    }\n  };\n\n  //En data cada objeto tiene su categoria, asi que la iteraremos con Math y guardaremos la categoría en un arreglo\n  const allCategories = ['All', ...new Set(data.map(article => article.category))];\n\n  //Usaremos 2 estados en esta aplicacion\n  const [categories, setcategories] = useState(allCategories);\n  const [articles, setArticles] = useState(data);\n  const filterCategory = category => {\n    if (category === 'All') {\n      setArticles(data);\n      return;\n    }\n    //Filtra todo lo que es article.category de la categoria elegida por el usuario\n    const filteredData = data.filter(article => article.category === category);\n    setArticles(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonList, {\n      categories: categories,\n      filterCategory: filterCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArticleList, {\n      articles: articles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Req3, \"WzTJEVvWtNYmzZhEryHbSoF/ito=\");\n_c = Req3;\nexport default Req3;\nvar _c;\n$RefreshReg$(_c, \"Req3\");","map":{"version":3,"names":["data","ArticleList","ButtonList","useState","useEffect","useLocation","useNavigate","axios","Req3","listaRestaurantes","setListaRestaurantes","obtenerRestauranteAsyncAwait","response","fetch","json","error","console","allCategories","Set","map","article","category","categories","setcategories","articles","setArticles","filterCategory","filteredData","filter"],"sources":["C:/Users/renzo/Desktop/Proyecto Renzo Cavero/PW_Proyecto_20230_React_Mejorado/src/Req3/Req3.jsx"],"sourcesContent":["/*El siguiente req se hizo con el apoyo de este video de YT: https://youtu.be/JY7eV4VMeV0*/\r\nimport './Req3.css'\r\nimport data from './data.js';\r\nimport ArticleList from './ArticleList';\r\nimport ButtonList from './ButtonList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from \"react-router-dom\"\r\nimport axios from 'axios';\r\n\r\nconst Req3 = () => {\r\n\r\n    const [listaRestaurantes, setListaRestaurantes] = useState([])\r\n\r\n    const obtenerRestauranteAsyncAwait = async function () {\r\n        try {\r\n            const response = await fetch(\"http://localhost:8000/endpoints/restaurante/listar\")\r\n            const data = await response.json()\r\n            setListaRestaurantes(data)\r\n        } catch (error) {\r\n            console.error(\"ERROR OBTENIENDO RESTAURANTES\")\r\n        }\r\n    }\r\n\r\n    //En data cada objeto tiene su categoria, asi que la iteraremos con Math y guardaremos la categoría en un arreglo\r\n    const allCategories = ['All', ...new Set(data.map(article => article.category))]\r\n\r\n    //Usaremos 2 estados en esta aplicacion\r\n    const [categories, setcategories] = useState(allCategories)\r\n    const [articles, setArticles] = useState(data)\r\n\r\n    const filterCategory = (category) => {\r\n        if (category === 'All') {\r\n            setArticles(data)\r\n            return\r\n        }\r\n        //Filtra todo lo que es article.category de la categoria elegida por el usuario\r\n        const filteredData = data.filter(article => article.category === category);\r\n        setArticles(filteredData)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <ButtonList categories={categories} filterCategory={filterCategory} />\r\n            <ArticleList articles={articles} />\r\n        </>\r\n    );\r\n};\r\nexport default Req3;"],"mappings":";;AAAA;AACA,OAAO,YAAY;AACnB,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,IAAI,GAAG,MAAM;EAAA;EAEf,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMQ,4BAA4B,GAAG,kBAAkB;IACnD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,CAAC;MAClF,MAAMb,IAAI,GAAG,MAAMY,QAAQ,CAACE,IAAI,EAAE;MAClCJ,oBAAoB,CAACV,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAC;IAClD;EACJ,CAAC;;EAED;EACA,MAAME,aAAa,GAAG,CAAC,KAAK,EAAE,GAAG,IAAIC,GAAG,CAAClB,IAAI,CAACmB,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;;EAEhF;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAACc,aAAa,CAAC;EAC3D,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACH,IAAI,CAAC;EAE9C,MAAM0B,cAAc,GAAIL,QAAQ,IAAK;IACjC,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACpBI,WAAW,CAACzB,IAAI,CAAC;MACjB;IACJ;IACA;IACA,MAAM2B,YAAY,GAAG3B,IAAI,CAAC4B,MAAM,CAACR,OAAO,IAAIA,OAAO,CAACC,QAAQ,KAAKA,QAAQ,CAAC;IAC1EI,WAAW,CAACE,YAAY,CAAC;EAC7B,CAAC;EAID,oBACI;IAAA,wBACI,QAAC,UAAU;MAAC,UAAU,EAAEL,UAAW;MAAC,cAAc,EAAEI;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACtE,QAAC,WAAW;MAAC,QAAQ,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACpC;AAEX,CAAC;AAAC,GAvCIhB,IAAI;AAAA,KAAJA,IAAI;AAwCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}