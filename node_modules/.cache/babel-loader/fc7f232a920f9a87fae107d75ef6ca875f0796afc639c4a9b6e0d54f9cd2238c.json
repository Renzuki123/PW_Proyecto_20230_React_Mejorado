{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renzo\\\\Desktop\\\\Presentaci\\xF3n Final PW 20230\\\\PW_Proyecto_20230_React_Mejorado\\\\src\\\\Presentation\\\\Login\\\\LoginRestForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./LoginRestForm.css\";\nimport imageLogo from \"./imageLogo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginRestForm(props) {\n  _s();\n  const [user, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //Con estas variables de estado vamos a almacenar los valores del login, pero para eso también\n  //Necesito poner una función que asigne esos valores de escritura a las funciones setUser y setPassword\n  //onChange={function(event){setUser(event.target.value)} -> esto va dentro del input\n\n  const butOnClick = function () {\n    //con esta función se imprime en consola cuando el usuario ingrese sus datos \n    console.log(user);\n    console.log(password);\n    onLoginOk(user, password); // se pasa como props esta función del padre LoginPage, para que me redirija al main\n  };\n\n  const navigate = useNavigate();\n  const loginHttp = async function (usuario, password) {\n    const response = await fetch(\"http://localhost:8000/endpoints/loginRestaurante\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        usuario: usuario,\n        password: password\n      })\n    });\n    const data = await response.json();\n    return data.error;\n  };\n  const onLoginOk = async function (usuario, password) {\n    const error = await loginHttp(usuario, password);\n    if (error === \"\") {\n      // Login correcto\n      const dataUsuario = {\n        username: usuario,\n        password: password\n      };\n\n      // JSON.stringify : convierte objetos js a JSON (string)\n      const dataUsuarioJSON = JSON.stringify(dataUsuario);\n      // Guardado en session storage\n      sessionStorage.setItem(\"DATA_USUARIO\", dataUsuarioJSON);\n      navigate(\"/main\", {\n        state: {\n          username: usuario\n        }\n      });\n    } else {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"imagenlogo\",\n        src: imageLogo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Usuario:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        value: user,\n        onChange: function (event) {\n          setUser(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), \"    \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Contrase\\xF1a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        type: \"password\",\n        value: password,\n        onChange: function (event) {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-2\",\n        type: \"button\",\n        onClick: butOnClick,\n        onLoginOk: onLoginOk,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}\n_s(LoginRestForm, \"zol1JOQSmGCkvIBHus2hW7oHb0c=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginRestForm;\nexport default LoginRestForm;\nvar _c;\n$RefreshReg$(_c, \"LoginRestForm\");","map":{"version":3,"names":["useState","useNavigate","imageLogo","LoginRestForm","props","user","setUser","password","setPassword","butOnClick","console","log","onLoginOk","navigate","loginHttp","usuario","response","fetch","method","body","JSON","stringify","data","json","error","dataUsuario","username","dataUsuarioJSON","sessionStorage","setItem","state","event","target","value"],"sources":["C:/Users/renzo/Desktop/Presentación Final PW 20230/PW_Proyecto_20230_React_Mejorado/src/Presentation/Login/LoginRestForm.jsx"],"sourcesContent":["import { useState} from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./LoginRestForm.css\"\r\nimport imageLogo from \"./imageLogo.png\";\r\n\r\nfunction LoginRestForm(props){\r\n\r\n    const [user,setUser] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\") \r\n    //Con estas variables de estado vamos a almacenar los valores del login, pero para eso también\r\n    //Necesito poner una función que asigne esos valores de escritura a las funciones setUser y setPassword\r\n    //onChange={function(event){setUser(event.target.value)} -> esto va dentro del input\r\n\r\n    const butOnClick= function(){\r\n        //con esta función se imprime en consola cuando el usuario ingrese sus datos \r\n        console.log(user)\r\n        console.log(password)\r\n        onLoginOk(user,password) // se pasa como props esta función del padre LoginPage, para que me redirija al main\r\n\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const loginHttp = async function(usuario, password) {\r\n        const response = await fetch(\r\n            \"http://localhost:8000/endpoints/loginRestaurante\",\r\n            {\r\n                method : \"POST\",\r\n                body : JSON.stringify(\r\n                    { \r\n                        usuario : usuario, \r\n                        password : password \r\n                    }\r\n                )\r\n            }\r\n        )\r\n        const data = await response.json()\r\n\r\n        return data.error\r\n    }\r\n\r\n    const onLoginOk = async function(\r\n        usuario, password\r\n    ) {\r\n        const error = await loginHttp(usuario, password)\r\n        if (error === \"\") {\r\n            // Login correcto\r\n            const dataUsuario = {\r\n                username : usuario,\r\n                password : password\r\n            }\r\n\r\n            // JSON.stringify : convierte objetos js a JSON (string)\r\n            const dataUsuarioJSON = JSON.stringify(dataUsuario)\r\n            // Guardado en session storage\r\n            sessionStorage.setItem(\"DATA_USUARIO\", dataUsuarioJSON)\r\n\r\n            navigate(\"/main\", {\r\n                state : {\r\n                    username : usuario\r\n                }\r\n            })\r\n        }else {\r\n            console.error(error)\r\n        }\r\n    }\r\n        \r\n\r\n    return <form className=\"form1\">\r\n        \r\n        <div>\r\n        <img className=\"imagenlogo\" src={imageLogo} alt=\"logo\" />\r\n        <br></br>\r\n            <label className=\"form-label\">Usuario:</label>\r\n            \r\n            <input className=\"form-control\" type=\"text\" \r\n            value={user} onChange={function(event){setUser(event.target.value)}} ></input>\r\n        </div>    {/*Con esta función asignamos la escritura a la variable de estado user*/}\r\n        <br></br>\r\n        <div>\r\n            <label className=\"form-label\" >Contraseña:</label>\r\n            <input className=\"form-control\" type=\"password\" \r\n             value={password} onChange={function(event){setPassword(event.target.value)}} ></input>\r\n                    {/*Con esta función asignamos la escritura a la variable de estado password  */}\r\n        </div>\r\n\r\n        <div>\r\n        <button className=\"btn btn-success mt-2\"\r\n         type=\"button\" onClick= {butOnClick} onLoginOk={ onLoginOk }>Login</button> {/*con el mt-2_ margin-top 2, se hace espacio */}\r\n                      {/**Al hacer click se imprime en consola los datos correspondientes al user y password */}\r\n                      {/*Hace una regeneración de componentes de las variables de estado */}\r\n                      \r\n        </div>          \r\n    </form>\r\n}\r\n\r\nexport default LoginRestForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}